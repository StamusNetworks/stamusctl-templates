#
name: Create and publish Docker images

on:
    push:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-clearndr:
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/clearndr
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: 'path=/clearndr'

            # # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)."
            # - name: Generate artifact attestation
            #   uses: actions/attest-build-provenance@v1
            #   with:
            #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            #     subject-digest: ${{ steps.push.outputs.digest }}
            #     push-to-registry: true

    build-and-push-test:
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tests
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: 'path=/tests'

            # # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)."
            # - name: Generate artifact attestation
            #   uses: actions/attest-build-provenance@v1
            #   with:
            #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
            #     subject-digest: ${{ steps.push.outputs.digest }}
            #     push-to-registry: true
