stages:
    - tests
    - docker
    - release

default:
  tags:
    - k8s-small

test clearndr:
    stage: tests
    image: git.stamus-networks.com:4567/devel/stamus-ctl/cli:main
    tags:
      - k8s
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    script:
        - apk update && apk add jq
        - stamusctl login --registry $GITLAB_REGISTRY_PATH --user $GITLAB_REGISTRY_USER --pass $GITLAB_REGISTRY_TOKEN
        - docker login $CI_REGISTRY --username $GITLAB_REGISTRY_USER --password $GITLAB_REGISTRY_TOKEN
        - stamusctl compose init --default --template data/clearndr/
        - stamusctl compose up -d
        - docker inspect config-nginx-1 | jq -e '.[0].HostConfig.RestartPolicy.Name == "unless-stopped"'
        - docker inspect config-ssl-keygen-1 | jq -e '.[0].State.Status == "exited"'
        - docker inspect config-ssl-keygen-1 | jq -e '.[0].State.Status == "exited"'
        - docker inspect config-ssl-keygen-1 | jq -e '.[0].State.ExitCode == 0'
        - stamusctl compose down
        - stamusctl config set globals.restartmode=always
        - stamusctl compose up -d
        - docker inspect config-nginx-1 | jq -e '.[0].HostConfig.RestartPolicy.Name == "always"'

tests:
    stage: docker
    image: docker:24.0.5
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build
            "${CI_PROJECT_DIR}/."
            -f "${CI_PROJECT_DIR}/Dockerfile"
            --build-arg "path=/tests"
            -t "${CI_REGISTRY_IMAGE}/tests:${CI_COMMIT_SHORT_SHA}"
            -t "${CI_REGISTRY_IMAGE}/tests:${CI_COMMIT_BRANCH}"
        - docker push ${CI_REGISTRY_IMAGE}/tests:${CI_COMMIT_SHORT_SHA}
        - docker push ${CI_REGISTRY_IMAGE}/tests:${CI_COMMIT_BRANCH}


clearndr:
    stage: docker
    image: docker:24.0.5
    variables:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_CERTDIR: '/certs'
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    services:
        - docker:24.0.5-dind
    needs:
        - test clearndr
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build
            "${CI_PROJECT_DIR}/."
            -f "${CI_PROJECT_DIR}/Dockerfile"
            --build-arg "path=/clearndr"
            -t "${CI_REGISTRY_IMAGE}/clearndr:${CI_COMMIT_SHORT_SHA}"
            -t "${CI_REGISTRY_IMAGE}/clearndr:${CI_COMMIT_BRANCH}"
        - docker push ${CI_REGISTRY_IMAGE}/clearndr:${CI_COMMIT_SHORT_SHA}
        - docker push ${CI_REGISTRY_IMAGE}/clearndr:${CI_COMMIT_BRANCH}

release-to-github:
    stage: release
    image: bitnami/git
    rules:
    - if: '$CI_COMMIT_BRANCH == "latest"'
      when: on_success
    script:
        - git config --global user.email $GITLAB_USER_EMAIL
        - git config --global user.name $GITLAB_USER_NAME
        - git remote add github "https://$GITHUB_USERNAME:$GITHUB_PAT@github.com/StamusNetworks/stamusctl-templates.git"
        - git fetch github
        - git checkout -b github-next
        - git branch --set-upstream-to github/next
        - git pull --rebase
        - git push github HEAD:next
