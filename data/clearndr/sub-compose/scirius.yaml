configs:
    scirius-start-sh:
        file: ../configs/scirius/start-scirius.sh

volumes:
    scirius-data: #for scirius data persistency
    scirius-static: #statics files to be served by nginx
    celery-git-path:

services:

    {{- if .Values.scirius }}
    scirius:
        image: {{ .Values.scirius.registry | default "ghcr.io/stamusnetworks/scirius" }}:{{ .Values.scirius.version | default "clearndr-ce-b1" }}
        container_name: {{template "base-name" .}}-scirius-{{template "suffix-name" .}}
        restart: {{ .Values.globals.restartmode | default "unless-stopped" }}
        healthcheck:
            interval: 10s
            timeout: 1s
            retries: 5
            start_period: 5m
        environment:
            - SECRET_KEY="{{.scirius.token | default (randAlphaNum 64)}}"
            - DEBUG={{.Values.scirius.debug | default "False"}}
            - SCIRIUS_IN_SELKS=True
            - USE_ELASTICSEARCH=True
            - ELASTICSEARCH_ADDRESS=elasticsearch:9200 #Default
            - USE_KIBANA=True
            - KIBANA_URL=http://kibana:5601 #Default
            - KIBANA_PROXY=True #Get kibana proxied by Scirius
            - ALLOWED_HOSTS=* #allow connexions from anywhere
            - KIBANA7_DASHBOARDS_PATH=/opt/selks/kibana7-dashboards #where to find kibana dashboards
            - SURICATA_UNIX_SOCKET=/var/run/suricata/suricata-command.socket #socket to control suricata
            {{- if .Values.evebox }}
            - USE_EVEBOX=True #gives access to evebox in the top menu
            - EVEBOX_ADDRESS=evebox:5636 #Default
            {{- end }}
            - USE_SURICATA_STATS=True #display more informations on the suricata page
            {{- if .Values.arkime }}
            - USE_MOLOCH=True
            - MOLOCH_URL=http://arkime:8005
            {{- end }}
            - DATABASE_TYPE=pg
            - DATABASE_NAME=selks
            - DATABASE_USERNAME=selks
            - DATABASE_PASSWORD=selks
            - DATABASE_HOST=db
            - DATABASE_PORT=5432
        configs:
            - source: scirius-start-sh
              target: /opt/scirius/docker/scirius/bin/start-scirius.sh
        volumes:
            - scirius-static:/static/
            - scirius-data:/data/
            - suricata-rules:/rules
            - suricata-run:/var/run/suricata
            - {{ .Release.location }}/containers-data/scirius/logs/:/logs/
            - {{ .Release.location }}/containers-data/suricata/rules:/rules
            - {{ .Release.location }}/containers-data/suricata/logs:/var/log/suricata:ro
        {{- if or .Values.global.exposePorts .Values.scirius.openPort }}
        ports:
            - 8000:8000
        {{- end }}
        networks:
            network:
        depends_on:
            db:
                condition: service_healthy
            elasticsearch:
                condition: service_healthy
            kibana:
                condition: service_healthy
    {{- end }}

    {{- if and .Values.scirius .Values.scirius.celery .Values.scirius.celery.worker }}
    celery-worker:
        image: {{ .Values.scirius.registry | default "ghcr.io/stamusnetworks/scirius" }}:{{ .Values.scirius.version | default "clearndr-ce-b1" }}
        container_name: {{template "base-name" .}}-celery-worker-{{template "suffix-name" .}}
        restart: {{ .Values.globals.restartmode | default "unless-stopped" }}
        working_dir: /opt/scirius
        entrypoint: celery
        command: -A suricata worker --loglevel=info
        environment:
            - SECRET_KEY="{{.scirius.token | default (randAlphaNum 64)}}"
            - DATABASE_TYPE=postgres
            - DATABASE_NAME=selks
            - DATABASE_USERNAME=selks
            - DATABASE_PASSWORD=selks
            - DATABASE_HOST=db
            - DATABASE_PORT=5432
        volumes:
            - celery-git-path:/data/git-sources/1/rules
            - ./docker/containers-data/scirius/logs/:/logs/
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'celery --broker=amqp://guest:guest@rabbitmq:5672// -A suricata inspect ping',
                ]
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            network:
        depends_on:
            rabbitmq:
                condition: service_healthy
    {{- end }}

    {{- if and .Values.scirius .Values.scirius.celery .Values.scirius.celery.flower }}
    celery-flower:
        image: {{ .Values.scirius.registry | default "ghcr.io/stamusnetworks/scirius" }}:{{ .Values.scirius.version | default "clearndr-ce-b1" }}
        container_name: {{template "base-name" .}}-celery-flower-{{template "suffix-name" .}}
        restart: always
        command: celery --broker=amqp://guest:guest@rabbitmq:5672// flower -A suricata
        environment:
            - SECRET_KEY="{{.scirius.token | default (randAlphaNum 64)}}"
        networks:
            network:
        depends_on:
            scirius:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
            celery-worker:
                condition: service_healthy
    {{- end }}
